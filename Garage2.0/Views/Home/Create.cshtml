@model Garage2._0.Models.CreateViewModel
@{
    Layout = null;
}
<div class="modal fade" tabindex="-1" role="dialog" id="Modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">New Vehicle!</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("Create", "Home", null, new AjaxOptions { OnSuccess = "FormSuccess" }, new { id = "modalForm", target = "_self" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RegNr, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.RegNr, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RegNr, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NumberOfWheels, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NumberOfWheels, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NumberOfWheels, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.VehicleType, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.EnumDropDownListFor(model => model.VehicleType, htmlAttributes: new { @class = "form-control", id = "VehicletypeDropDown" })
                                @Html.ValidationMessageFor(model => model.VehicleType, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3" id="VehicletypeDropDownPrice">

                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <input type="submit" value="Create" class="btn btn-primary" form="modalForm" />
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script>
    var VehicletypePrices = {
        @{
            string[] priceName = Enum.GetNames(typeof(prices));
        }
    }
    $('.datepickercheckin').datetimepicker({
        useCurrent: true,
    });

    $('#VehicletypeDropDown').change(getVehiclePriceCheckIn);
</script>